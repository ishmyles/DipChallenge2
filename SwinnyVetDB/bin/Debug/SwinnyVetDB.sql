/*
Deployment script for SwinnyVetDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar LoadTestData "false"
:setvar DatabaseName "SwinnyVetDB"
:setvar DefaultFilePrefix "SwinnyVetDB"
:setvar DefaultDataPath "C:\Users\ishmyles\AppData\Local\Microsoft\VisualStudio\SSDT\SwinnyVetDB"
:setvar DefaultLogPath "C:\Users\ishmyles\AppData\Local\Microsoft\VisualStudio\SSDT\SwinnyVetDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = AUTO, OPERATION_MODE = READ_WRITE) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating [dbo].[Owner]...';


GO
CREATE TABLE [dbo].[Owner] (
    [OwnerID]   NVARCHAR (4)  NOT NULL,
    [GivenName] NVARCHAR (15) NOT NULL,
    [Surname]   NVARCHAR (15) NOT NULL,
    [PhoneNo]   NVARCHAR (10) NOT NULL,
    CONSTRAINT [PK_OWNER] PRIMARY KEY CLUSTERED ([OwnerID] ASC)
);


GO
PRINT N'Creating [dbo].[Pet]...';


GO
CREATE TABLE [dbo].[Pet] (
    [PetName] NVARCHAR (15) NOT NULL,
    [OwnerID] NVARCHAR (4)  NOT NULL,
    [PetType] NVARCHAR (15) NOT NULL,
    CONSTRAINT [PK_PET] PRIMARY KEY CLUSTERED ([PetName] ASC, [OwnerID] ASC)
);


GO
PRINT N'Creating [dbo].[Procedure]...';


GO
CREATE TABLE [dbo].[Procedure] (
    [ProcedureID]    NVARCHAR (3)   NOT NULL,
    [ProcedureDesc]  NVARCHAR (100) NOT NULL,
    [ProcedurePrice] MONEY          NOT NULL,
    CONSTRAINT [PK_PROCEDURE] PRIMARY KEY CLUSTERED ([ProcedureID] ASC)
);


GO
PRINT N'Creating [dbo].[Treatment]...';


GO
CREATE TABLE [dbo].[Treatment] (
    [PetName]        NVARCHAR (15) NOT NULL,
    [OwnerID]        NVARCHAR (4)  NOT NULL,
    [ProcedureID]    NVARCHAR (3)  NOT NULL,
    [TreatmentDate]  DATE          NOT NULL,
    [TreatmentNotes] NVARCHAR (50) NOT NULL,
    [TreatmentPrice] MONEY         NULL,
    CONSTRAINT [PK_TREATMENT] PRIMARY KEY CLUSTERED ([PetName] ASC, [OwnerID] ASC, [ProcedureID] ASC, [TreatmentDate] ASC)
);


GO
PRINT N'Creating [dbo].[FK_OWNER_PET]...';


GO
ALTER TABLE [dbo].[Pet] WITH NOCHECK
    ADD CONSTRAINT [FK_OWNER_PET] FOREIGN KEY ([OwnerID]) REFERENCES [dbo].[Owner] ([OwnerID]);


GO
PRINT N'Creating [dbo].[FK_PET_TREATMENT]...';


GO
ALTER TABLE [dbo].[Treatment] WITH NOCHECK
    ADD CONSTRAINT [FK_PET_TREATMENT] FOREIGN KEY ([PetName], [OwnerID]) REFERENCES [dbo].[Pet] ([PetName], [OwnerID]);


GO
PRINT N'Creating [dbo].[FK_PROCEDURE_TREATMENT]...';


GO
ALTER TABLE [dbo].[Treatment] WITH NOCHECK
    ADD CONSTRAINT [FK_PROCEDURE_TREATMENT] FOREIGN KEY ([ProcedureID]) REFERENCES [dbo].[Procedure] ([ProcedureID]);


GO
PRINT N'Creating [dbo].[CHK_PRICE]...';


GO
ALTER TABLE [dbo].[Procedure] WITH NOCHECK
    ADD CONSTRAINT [CHK_PRICE] CHECK (ProcedurePrice > $0);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF '$(LoadTestData)' = 'true'

BEGIN

DELETE FROM Treatment;
DELETE FROM Pet;
DELETE FROM [Procedure];
DELETE FROM [Owner];

INSERT INTO [Owner](OwnerID, GivenName, Surname, PhoneNo) VALUES
('1','Frank','Sinatra','0400111222'),
('2','Duke','Ellington','0400222333'),
('3','Ella','Fitzgerald','0400333444');

INSERT INTO [Procedure](ProcedureID, ProcedureDesc, ProcedurePrice) VALUES
('1','Rabies Vaccination', $24.00),
('10','Examine and Treat Wound', $30.00),
('5','Heart Worm Test', $25.00),
('8','Tetnus Vaccination', $17.00);

INSERT INTO Pet(PetName, OwnerID, PetType) VALUES
('Buster', '1', 'Dog'),
('Fluffy', '1', 'Cat'),
('Stew', '2', 'Rabbit'),
('Buster', '3', 'Dog'),
('Pooper', '3', 'Dog');

INSERT INTO [Treatment](PetName, OwnerID, ProcedureID, TreatmentDate, TreatmentNotes, TreatmentPrice) VALUES
(
	'Buster', '1', '1', 
	CONVERT(DATE, '20/6/2017', 103),
	'Routine Vaccination', $22.00
),
(
	'Buster', '1', '1', 
	CONVERT(DATE, '15/5/2018', 103),
	'Booster Shot', $24.00
),
(
	'Fluffy', '1', '10', 
	CONVERT(DATE, '10/5/2018', 103),
	'Wounds sustained in apparent cat fight', $30.00
),
(
	'Stew', '2', '10', 
	CONVERT(DATE, '10/5/2018', 103),
	'Wounds sustained during attempt to cook the stew', $30.00
),
(
	'Pooper', '3', '5', 
	CONVERT(DATE, '18/5/2018', 103),
	'Routine Test', $25.00
);

END
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Pet] WITH CHECK CHECK CONSTRAINT [FK_OWNER_PET];

ALTER TABLE [dbo].[Treatment] WITH CHECK CHECK CONSTRAINT [FK_PET_TREATMENT];

ALTER TABLE [dbo].[Treatment] WITH CHECK CHECK CONSTRAINT [FK_PROCEDURE_TREATMENT];

ALTER TABLE [dbo].[Procedure] WITH CHECK CHECK CONSTRAINT [CHK_PRICE];


GO
PRINT N'Update complete.';


GO
